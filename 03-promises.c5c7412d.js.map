{"mappings":"igBAGMA,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBA+BxC,SAASG,EAAaC,EAAMC,GAC1B,I,kBACEC,YAAW,WA5Bf,IAAuBC,EAAUC,GAAVD,EA6BHE,EA7BaD,EA6BVJ,EAAOK,EA5BrB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCT,YAAW,WACLO,GACFF,EAAQ,CAAEJ,WAAUC,UAEtBI,EAAO,CAAEL,WAAUC,YAClBA,OAsBEQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,EAAAC,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,UAE9Dc,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,EAAAC,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,YAE7DJ,IATIoB,EAAI,EAAGA,EAAInB,EAAQmB,GAAK,EAACC,EAAAD,GA9BvBzB,SAASC,cAAc,SAC/B0B,iBAAiB,UAsBtB,SAAuBC,GACrBA,EAAEC,iBACF,IAAgCC,EATzB,CACLrB,MAAOsB,OAAOhC,EAAQiC,OACtB3B,KAAM0B,OAAO7B,EAAO8B,OACpB1B,OAAQyB,OAAO5B,EAAS6B,QAMlBvB,EAAwBqB,EAAxBrB,MAAOJ,EAAiByB,EAAjBzB,KAAMC,EAAWwB,EAAXxB,OACrBC,WAAWH,EAAcK,EAAOJ,EAAMC,EAAQG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import '../css/common.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction getValue() {\n  return {\n    delay: Number(delayEl.value),\n    step: Number(stepEl.value),\n    amount: Number(amountEl.value),\n  };\n}\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  const { delay, step, amount } = getValue();\n  setTimeout(startPromise, delay, step, amount, delay);\n}\n\nfunction startPromise(step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      createPromise(i, step * i)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, step);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$startPromise","step","amount","setTimeout","position","delay","i","Promise","resolve","reject","shouldResolve","Math","random","then","param","$h6c0i","Notify","success","concat","catch","failure","i1","_loop","addEventListener","e","preventDefault","ref","Number","value"],"version":3,"file":"03-promises.c5c7412d.js.map"}