{"mappings":"qfAGA,MAAMA,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBA+BxC,SAASG,EAAaC,EAAMC,EAAQC,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BC,YAAW,KA5Bf,IAAuBC,EAAUC,GAAVD,EA6BHF,EA7BaG,EA6BVN,EAAOG,EA5BrB,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCR,YAAW,KACLM,GACFF,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,MAClBA,OAsBEO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAC,OAAOC,QACL,uBAAqBX,EAAY,QAASC,EAAOJ,UAGpDe,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAC,OAAOG,QACL,sBAAoBb,EAAU,QAASC,EAAOJ,YAGnDF,GA3CML,SAASC,cAAc,SAC/BuB,iBAAiB,UAsBtB,SAAuBC,GACrBA,EAAEC,iBACF,MAAMf,MAAEA,EAAKN,KAAEA,EAAIC,OAAEA,GATd,CACLK,MAAOgB,OAAO5B,EAAQ6B,OACtBvB,KAAMsB,OAAOzB,EAAO0B,OACpBtB,OAAQqB,OAAOxB,EAASyB,QAO1BnB,WAAWL,EAAcO,EAAON,EAAMC,EAAQK","sources":["src/js/03-promises.js"],"sourcesContent":["import '../css/common.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction getValue() {\n  return {\n    delay: Number(delayEl.value),\n    step: Number(stepEl.value),\n    amount: Number(amountEl.value),\n  };\n}\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  const { delay, step, amount } = getValue();\n  setTimeout(startPromise, delay, step, amount, delay);\n}\n\nfunction startPromise(step, amount, firstDelay) {\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      createPromise(i, step * i)\n        .then(({ position, delay }) => {\n          Notify.success(\n            `✅ Fulfilled promise ${position + 1} in ${delay + firstDelay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(\n            `❌ Rejected promise ${position + 1} in ${delay + firstDelay}ms`\n          );\n        });\n    }, step);\n  }\n}\n"],"names":["$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$startPromise","step","amount","firstDelay","i","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","$iQIUW","Notify","success","catch","failure","addEventListener","e","preventDefault","Number","value"],"version":3,"file":"03-promises.80dd4b4f.js.map"}